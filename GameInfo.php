<?php

if (!isset($safeToExecuteBitFlags))
{
    echo '<!-- -->' . "<h3>BitFlags.php is a library file and can not be run directly!<br />Try running ParaTrackerA.php or ParaTrackerDynamic.php instead.</h3>";
    exit();
}

// This file is used to parse BitFlags that are mixed in with the server CVars,
// gametype names, and info used to auto-detect the game that is being tracked.
// DO NOT edit this file unless you know what you are doing.
// For that matter, if you edit it, you should let the ParaTracker team know,
// so they can include whatever game you're adding into this file by default,
// and everyone else can enjoy it too.

// This file works by declaring a function for each game name.
// EACH FUNCTION NAME MUST HAVE NO SPACES AND MUST BE LOWERCASE ONLY.
// CVar names must also be lowercase.
// The function will be executed during data parsing.

// When ParaTracker finds a matching value in the index array, it will then parse the other arrays and display the data it found.

Function detectGameName($input)
{
            //This function is used to auto-detect the name of the game being tracked.
 
            //If you add a game, add it to this array. Each line detects a different game.
//The first value of each line is part of the “version” variable on the server for the associated game.
//The second value of each line is the name the tracker will display for that game.
//Please note that levelshot folders are based on the game name – so if you change it, make sure it is accurate!
            $gamestrs = array(
            "JAmp" => "Jedi Academy",
            "JK2MP" => "Jedi Outcast",
            "tremulous" => "Tremulous",
            "CoD4" => "Call of Duty 4: Modern Warfare",
            "xonotic" => "Xonotic",
            );

            foreach ($gamestrs as $key => $value)
            {
                        if(strpos(strtolower($input), strtolower($key)))
                        {
                                    return $value;
                        }
            }
 
            //Did not find a match. Return false so the config file can take over.
            return false;
}


function jediacademy()
{
    //The first value of the bitFlagsIndex MUST be the gametype variable!
    $bitFlagsIndex = array("g_gametype", "dmflags", "g_weaponDisable", "g_forcePowerDisable");

    $g_gametype = array("FFA", "", "", "Duel", "Power Duel", "Team FFA", "Siege", "CTF");
    $dmflags = array("", "", "", "No Fall Damage", "Fixed cg_fov", "No footsteps", "No drown damage", "Fixed CL_Yawspeed", "No fixed anims", "No realistic hook");
    $g_weaponDisable = array("", "Stun Baton", "Melee", "Lightsaber", "Bryar Blaster Pistol", "E-11 Blaster", "Tenloss Disruptor Rifle", "Wookiee Bowcaster", "Imperial Heavy Repeater", "DEMP 2", "Golan Arms FC1 Flechette", "Merr-Sonn Portable Missile Launcher", "Thermal Detonator", "Trip Mine", "Detonation Pack", "Stouker Concussion Rifle", "Bryar Blaster Pistol (Old)", "Emplaced Gun", "Turret");
    $g_forcePowerDisable = array("Heal", "Jump", "Speed", "Push", "Pull", "Mind Trick", "Grip", "Lightning", "Rage", "Protect", "Absorb", "Team Heal", "Team Force", "Drain", "Sight", "Saber Offense", "Saber Defense", "Saber Throw");

    //Return ALL of the arrays defined above. The first one MUST be bitFlagsIndex, and the second one MUST be the gametype array.
    //If the game does not use gametype values, pass an array with a single null value.
    return array($bitFlagsIndex, $g_gametype, $dmflags, $g_weaponDisable, $g_forcePowerDisable);
}



function jedioutcast()
{
    //The first value of the bitFlagsIndex MUST be the gametype variable!
    $bitFlagsIndex = array("g_gametype", "dmflags", "g_weaponDisable", "g_forcePowerDisable");


    //Here are the values:
    $g_gametype = array("FFA", "", "", "Duel", "Power Duel", "Team FFA", "Siege", "CTF");
    $dmflags = array("", "", "", "No Fall Damage", "Fixed cg_fov", "No footsteps", "No drown damage", "Fixed CL_Yawspeed", "No fixed anims", "No realistic hook");
    $g_weaponDisable = array("", "Stun Baton", "Melee", "Lightsaber", "Bryar Blaster Pistol", "E-11 Blaster", "Tenloss Disruptor Rifle", "Wookiee Bowcaster", "Imperial Heavy Repeater", "DEMP 2", "Golan Arms FC1 Flechette", "Merr-Sonn Portable Missile Launcher", "Thermal Detonator", "Trip Mine", "Detonation Pack", "Stouker Concussion Rifle", "Bryar Blaster Pistol (Old)", "Emplaced Gun", "Turret");
    $g_forcePowerDisable = array("Heal", "Jump", "Speed", "Push", "Pull", "Mind Trick", "Grip", "Lightning", "Rage", "Protect", "Absorb", "Team Heal", "Team Force", "Drain", "Sight", "Saber Offense", "Saber Defense", "Saber Throw");

    //Return ALL of the arrays defined above. The first one MUST be bitFlagsIndex, and the second one MUST be the gametype array.
    //If the game does not use gametype values, pass an array with a single null value.
    return array($bitFlagsIndex, $g_gametype, $dmflags, $g_weaponDisable, $g_forcePowerDisable);
}

function tremulous()
{
    //The first value of the bitFlagsIndex MUST be the gametype variable!
    $bitFlagsIndex = array("g_gametype");

    $g_gametype = array("Tremulous");

    //Return ALL of the arrays defined above. The first one MUST be bitFlagsIndex, and the second one MUST be the gametype array.
    //If the game does not use gametype values, pass an array with a single null value.
    return(array($bitFlagsIndex, $g_gametype));
}

function quakeIII()
{
    //The first value of the bitFlagsIndex MUST be the gametype variable!
    $bitFlagsIndex = array("g_gametype", "dmflags", "item_disable");

    //Here are the values:
    $g_gametype = array("FFA", "1 on 1 Tournament", "Single Player", "Team Deathmatch", "CTF", "One Flag CTF", "Overload", "Harvester");
    $dmflags = array("", "", "", "No Fall Damage", "Fixed cg_fov", "No footsteps", "No drown damage", "Fixed CL_Yawspeed", "No fixed anims", "No realistic hook");
    $item_disable = array("All Armor", "All Health", "BFG", "Machinegun", "Shotgun", "Grenade Launcher", "Rocket Launcher", "Lightning Gun", "Plasma Gun", "Railgun");

    //Return ALL of the arrays defined above. The first one MUST be bitFlagsIndex, and the second one MUST be the gametype array.
    //If the game does not use gametype values, pass an array with a single null value.
    return array($bitFlagsIndex, $g_gametype, $dmflags, $item_disable);
}

?>